
local Noclip = nil
local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end
TTK = 5 -- time to kill
SeraD = false
JohnD = false
ArloD = false
noclip() -- to toggle noclip() and clip()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChild("Humanoid")
local HRP = character:FindFirstChild("HumanoidRootPart")

while true do
    local Cripple = workspace:FindFirstChild("Cripple")
    local Arlo = workspace:FindFirstChild("Arlo")
    local John = workspace:FindFirstChild("John")
    local Sera = workspace:FindFirstChild("Seraphina")
    local Blyke = workspace:FindFirstChild("Blyke")
    local Isen = workspace:FindFirstChild("Isen")
    local Remi = workspace:FindFirstChild("Remi")
    local Zeke = workspace:FindFirstChild("Zeke")
    local Crail = workspace:FindFirstChild("Crail")
    local NPCs = {John,Sera} -- CHANGE THIS TO THE NPCS YOU WANT, EXAMPLE: {Sera,John,Arlo}
    local NPC = math.random(1, #NPCs)
    local NPCChosen = NPCs[NPC]
    local old = NPCChosen
    if NPCChosen and NPCChosen.Humanoid.Health >= 10 then
        repeat
            local dist = (HRP.Position - NPCChosen.HumanoidRootPart.Position).Magnitude
            if dist <= 5 then
                game.ReplicatedStorage.Punch:FireServer(NPCChosen.Humanoid,6,0,"DamageMultiplier:2")
                game.ReplicatedStorage.Knockback:FireServer(NPCChosen,2)
            end
            humanoid:MoveTo(NPCChosen.HumanoidRootPart.Position + Vector3.new(0,0,3))
            Wait(0.05)
        until NPCChosen.Humanoid.Health <= 0
    end
    Wait(0.05)
end
